// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id             String           @id @default(cuid())
  firebaseId     String           @unique @map(name: "firebase_id")
  name           String
  email          String           @unique
  imageUrl       String?          @map(name: "image_url")
  role           Role             @default(USER)
  createdAt      DateTime         @default(now()) @map(name: "created_at")
  updatedAt      DateTime         @updatedAt @map(name: "updated_at")
  Course         Course[]
  CourseAttendee CourseAttendee[]

  @@map(name: "user")
}

enum Role {
  USER
  COURSE_OWNER
  ADMIN
}

model Course {
  id            String         @id @default(cuid())
  userId        String         @map(name: "user_id")
  name          String         @unique
  category      CourseCategory
  status        CourseStatus
  description   String?
  attendeeLimit Int            @map(name: "attendee_limit")
  imageUrl      String?        @map(name: "image_url")
  createdAt     DateTime       @default(now()) @map(name: "created_at")
  updatedAt     DateTime       @updatedAt @map(name: "updated_at")

  CourseAttendee CourseAttendee[]
  user           User             @relation(fields: [userId], references: [id])

  @@map(name: "course")
}

enum CourseCategory {
  TECH
  NON_TECH
}

enum CourseStatus {
  OPEN
  CLOSED
  IN_PROGRESS
  ENDED
}

model CourseAttendee {
  id        String   @id @default(cuid())
  userId    String
  courseId  String   @map(name: "course_id")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  user   User   @relation(fields: [userId], references: [id])
  course Course @relation(fields: [courseId], references: [id])

  @@map(name: "course_attendee")
}
